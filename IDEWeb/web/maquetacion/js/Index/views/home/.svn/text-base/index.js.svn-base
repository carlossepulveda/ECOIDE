define([
  'jquery',
  'underscore',
  'backbone',
  'views/search/search_Box',
  'views/book_collection/book_Collection',
  'collections/books',
  'text!templates/book_Collection/book_Catalog_Description.html',
  'text!templates/login/login.html',
  'models/login',
  'text!templates/footer/footer.html'

  ]
  , function($, _, Backbone, search_Box, book_Collection_View,book_Collection,book_Catalog_Description_View,index_Login_View, login_Manager,footer){

  var indexView = Backbone.View.extend({
    el: $("body"),
    flagFilter: false,
    book_Collection: new book_Collection({}),
    book_Collection_View: new book_Collection_View({}),
    login_Manager: new login_Manager(),
    events:{
    	'body onload': 'load',      
      'click .book_Catalog_Description_CloseButton': 'clickBookDescriptionCloseButton',
      'click .index_Login_Link': 'clickLinkIndexLogin',
      'click .index_Login_Container': 'clickIndexLoginContainer',
      'click .index_Login': 'clickIndexLogin',
      'click .index_Login_Button_Enter': 'clickButtonLogin',
      'click .index_Login_Close_Buttom': 'clickCloseLoginBox'
    },
  	initialize:function(load){
      
      if(load){
        $('footer').append(footer);
    		var that=this;
    		search_Box.initialize({parent : that});
        
    		this.book_Collection.search({},function(){
            that.book_Collection_View.initialize(
              {
                elSelector:'.book_Collection_View',
                title: 'Librer√≠a',
                parent: that ,
                book_Collection:that.book_Collection, 
                rows: 2, 
                columns: 5, 
                height: '300px',
                type: 'catalog',
                methodClick: 'showCatalogDescription',
                noFoundMessage: '.book_NoFound'
              });
        },function(){
          alert('ocurrio un error al intentar realizar la consulta de libros');
        });
      }
  	},
    render: function(){                                 
   
    },
    search: function(data){
    	book_Collection.search(data,function(answ){book_Collection_View.render()});    		
    	
    },
    filter: function(data){
      this.book_Collection.filter(data);
      this.book_Collection_View.render();
      this.flagFilter=true;
    },
    clean: function(){
      if(this.flagFilter){
    	  this.book_Collection.clean();
        this.book_Collection_View.render();
        this.flagFilter=false;
      }
    },
    load:function(){
    	alert('load');
    },
    showCatalogDescription:function(indexBook){
      this.closeCatalogDescription();
      var data={
        book: this.book_Collection.at(indexBook),
        type: 'catalog',
        classIngresarButtom: 'index_Login_Link',
        enableReaderLink:false,
        _:_
      };
      this.$el.append(_.template(book_Catalog_Description_View,data));
      this.book_Collection_View.hide();
    },
    clickBookDescriptionCloseButton:function(){
      this.closeCatalogDescription();
    },
    closeCatalogDescription: function(){
      this.book_Collection_View.show();
      $('.book_Catalog_Book_Container').remove(); 
    },
    clickLinkIndexLogin:function(event){
      this.closeCatalogDescription();
      this.showBoxLogin();
    },
    showBoxLogin:function(){
      
      this.$el.append(_.template(index_Login_View));
      var top=parseInt(this.$el.css('height'))/2-(parseInt(this.$el.find('.index_Login').css('height'))/2);
      var left=parseInt(this.$el.css('width'))/2-(parseInt(this.$el.find('.index_Login').css('width'))/2);
      this.$el.find('.index_Login').css({top:top+'px',left:left+'px'});

    },
    clickCloseLoginBox: function(event){
      this.closeBoxLogin();
    },
    closeBoxLogin: function(){
      this.$el.find('.index_Login_Container').remove();
    },
    clickIndexLoginContainer: function(event){
      event.stopPropagation();
      this.closeBoxLogin();
    },
    clickIndexLogin: function(event){
      event.stopPropagation();
    },
    clickButtonLogin: function(event){
      event.stopPropagation();
      this.login();
    },
    login: function(){
      var user=this.$el.find('.index_Login_Field_User').val();
      var pass=this.$el.find('.index_Login_Field_Pass').val();
      this.login_Manager.set({id:user, pass: pass});
      this.login_Manager.login('.index_Login_Form');
      
    },
    saveOauthObject: function(oauthObject){
      this.login_Manager.saveOauthObject(oauthObject);
    },
    getOauthObject: function(){
      return this.login_Manager.get("oauthObject");
    }
  });
  return new indexView;
});